Please amend this prompt in order to code a fully functional arcade game in the style of pacman:

Project Specification Template ## 1. Project Title Provide a clear and concise title for the project. Example: [Your Project Title Here] yaml Copy code — ## 2. User Story Describe the feature from the end-user’s perspective, focusing on their needs and the value the feature provides. Format: As a [type of user], I want to [desired action] so that I can [benefit]. Example: As a [type of user], I want to [desired action] so that I can [benefit]. yaml Copy code — ## 3. Acceptance Criteria Define the conditions that must be met for the feature to be considered complete and functioning as intended. Use the Given-When-Then format for clarity. ### 3.1. [Criterion Title] - Given [context or precondition], - When [action or event], - Then [expected outcome]. Example: ```markdown ### 3.1. [Criterion Title] - Given [context or precondition], - When [action or event], - Then [expected outcome]. Repeat this subsection for each acceptance criterion. 4. Context/Background Provide background information that offers context to the project, explaining why it’s being undertaken and any relevant history or existing solutions. Example: markdown Copy code [Provide context and background information here.] 5. Priority/Impact Indicate the importance and potential impact of the feature on the overall project. Example: csharp Copy code [High/Medium/Low Priority] – [Description of the priority and its impact on the project.] 6. Technical Specifications Detail the technical requirements and considerations necessary to implement the feature successfully. 6.1. Technologies [Technology 1]: [Description or purpose] [Technology 2]: [Description or purpose] Add more as needed. 6.2. Dependencies [Dependency 1]: [Details about the dependency] [Dependency 2]: [Details about the dependency] Add more as needed. 6.3. [Additional Technical Section] Provide further technical details as necessary. Example: csharp Copy code ### 6.3. [Section Title] [Details about this technical aspect.] 7. Validation and Testing Outline the steps and methods to verify that the feature meets all acceptance criteria and functions correctly. 7.1. Functional Testing [Test Case 1]: [Description] [Test Case 2]: [Description] Add more as needed. 7.2. Error Handling Verification [Scenario 1]: [Description] [Scenario 2]: [Description] Add more as needed. 7.3. Performance Testing [Performance Metric 1]: [Description] [Performance Metric 2]: [Description] Add more as needed. 7.4. Cross-Browser Compatibility [Browser 1]: [Status or notes] [Browser 2]: [Status or notes] Add more as needed. 7.5. User Feedback [Feedback Method 1]: [Description] [Feedback Method 2]: [Description] Add more as needed. 8. Implementation Steps Provide a step-by-step guide to develop the feature, incorporating preventive measures for common issues. Example: markdown Copy code 1. [Step 1 Title] - [Description of Step 1] 2. [Step 2 Title] - [Description of Step 2] 3. ** [Step 3 Title]** - [Description of Step 3] Continue as needed. 9. Risk Assessment and Mitigation Identify potential risks that could impede the project’s success and outline strategies to mitigate them. Example: markdown Copy code - Risk: [Description of risk] - Mitigation: [Strategy to mitigate risk] - Risk: [Description of risk] - Mitigation: [Strategy to mitigate risk] Add more as needed. 10. Dependencies and Resources List all external libraries, tools, and resources required to implement the feature successfully. Example: less Copy code - Libraries: - [Library 1]: [Purpose] - [Library 2]: [Purpose] - Resources: - [Resource 1]: [Description] - [Resource 2]: [Description] - Tools: - [Tool 1]: [Purpose] - [Tool 2]: [Purpose] 11. Estimated Effort Provide an estimate of the effort required to implement the feature, often expressed in story points or person-hours. Example: css Copy code [Number] Story Points – [Brief explanation of the complexity and scope of the task.] 12. Validation Checklist A final checklist to ensure all aspects of the feature have been addressed before considering it complete. Example: css Copy code - [ ] [Checklist Item 1] - [ ] [Checklist Item 2] - [ ] [Checklist Item 3] Continue as needed. 13. Additional Considerations Highlight any other important factors or future enhancements that could improve the feature. Example: markdown Copy code - Accessibility: - [Description or considerations] - Scalability: - [Description or considerations] - Security: - [Description or considerations] - Documentation: - [Description or considerations] - Future Enhancements: - [Description or considerations]